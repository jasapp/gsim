goog.addDependency("../cljs/core.js", ['cljs.core'], ['goog.string', 'goog.string.StringBuffer', 'goog.object', 'goog.array']);
goog.addDependency("../clojure/browser/event.js", ['clojure.browser.event'], ['cljs.core', 'goog.events', 'goog.events.EventTarget', 'goog.events.EventType']);
goog.addDependency("../gsim/sample/model.js", ['gsim.sample.model'], ['cljs.core', 'gsim.dispatch']);
goog.addDependency("../domina.js", ['domina'], ['cljs.core', 'goog.dom', 'goog.dom.xml', 'goog.dom.classes', 'goog.dom.forms', 'goog.style', 'goog.string', 'cljs.core']);
goog.addDependency("../domina/xpath.js", ['domina.xpath'], ['cljs.core', 'domina', 'goog.dom']);
goog.addDependency("../gsim/sample/animation.js", ['gsim.sample.animation'], ['cljs.core', 'gsim.browser.animation', 'domina.xpath', 'domina', 'gsim.core', 'goog.style', 'goog.dom.forms']);
goog.addDependency("../gsim/sample/view.js", ['gsim.sample.view'], ['clojure.browser.event', 'cljs.core', 'gsim.dispatch', 'goog.events.KeyCodes', 'gsim.sample.animation', 'gsim.browser.animation', 'domina.xpath', 'domina', 'goog.events.KeyHandler']);
goog.addDependency("../clojure/browser/net.js", ['clojure.browser.net'], ['cljs.core', 'clojure.browser.event', 'goog.net.XhrIo', 'goog.net.EventType', 'goog.net.xpc.CfgFields', 'goog.net.xpc.CrossPageChannel', 'goog.json']);
goog.addDependency("../clojure/browser/repl.js", ['clojure.browser.repl'], ['cljs.core', 'clojure.browser.net', 'clojure.browser.event']);
goog.addDependency("../cljs/reader.js", ['cljs.reader'], ['cljs.core', 'goog.string']);
goog.addDependency("../gsim/sample/logging.js", ['gsim.sample.logging'], ['cljs.core', 'gsim.dispatch', 'gsim.logging']);
goog.addDependency("../gsim/sample/history.js", ['gsim.sample.history'], ['cljs.core', 'gsim.browser.history', 'gsim.dispatch']);
goog.addDependency("../gsim/sample/core.js", ['gsim.sample.core'], ['cljs.core', 'gsim.dispatch', 'gsim.sample.view', 'clojure.browser.repl', 'goog.uri.utils']);
goog.addDependency("../gsim/sample/controller.js", ['gsim.sample.controller'], ['clojure.browser.event', 'cljs.core', 'gsim.dispatch', 'cljs.reader', 'goog.uri.utils', 'gsim.browser.remote', 'gsim.sample.model']);